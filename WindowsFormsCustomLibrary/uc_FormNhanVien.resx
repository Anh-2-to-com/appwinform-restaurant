<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHinhAnh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        ugAAALoBTx5ghQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAM1SURBVEhL3ZVb
        aJJhGMe/SvMwdTNc6jxs+qnza+o0yW26ZWlrzi2oWSt2KmpEREQXQQQVRK5B7aJ2URHBbloHalSLotM6
        jVgXnW46Xa2boKiIWKOS4t/72jTdrLxoF/XADz6e93n+f9/3eb9P5r+JKrFE2kcRCsUdY7nUmJInlx9V
        aTR941HkK0+Sdd2Psl/H2hKnB6HFTRCKxC/GcqmhNBdzb4/1X8F46hoaP5L18I+yzOEWCkWjSrVmhKKY
        qfyQmyvvHVtLRFnd4sjbh8OvMJ4dnV3fBALBRlrEnz79mUSa+4YyjccbJSk3zUdn2UtHtu3eC0r7hk2Q
        yGQPSH5tCgeq5i+IJWpSWdG2GjkSyQ1ax+Pz33kqg6DMUChHSC7KqKSiWNfceZgMqDbDKeWfempCcCjy
        40TMFrxet/6X3G9uxbo5LjgL1SguyEddiQm94bqMtVSbMcilX65EliEbov5KFBHRyvm1CDc0I7SkCdWL
        GmG3cfCbCnE5sjStnmozUhHvc3u1Dn/CZcwFa9DGhYtYC0pKZ8PnD0Kt0cLjC6AqsBBiAS+th2ozRrXo
        zbeBefgdsat+sDo56htXQVtoQM/p82hsa8eWnZ24+/QFgqF6+MiubLZiDO53Jfuo9gSDOaXG5HOCwW5y
        5qUcHO4ydHYfiu+gZc16XBi8F7+qQ0+GyU505LiWY0W1PtmX0UClVCSfE/RssZJj8ENfxOLIibOwOd0T
        3gevP4Ba8qK6rPnJvqwNTmyfBU+5F0azFeeu38GloUcTDEocLjKfFsydrUr2ZW0wfLwcFrYAFf4aLGtZ
        NUH85MUBGEzFqAqGsbWFTfZlbUCp9qgQqF0CM2fH0uaV6L85hFuPnpOZHESBVh//9QadAq/6fMmerAwi
        XhWsahlu7XPBpM9DMNwAX6AWrIWD3sCSwZcjHGmFmdXh8GYurTcrA65AhhqTDv0ddrw85Y3vhB6Xp8Ib
        H7zTwcGozcOZXY60PkpGgz0by9KKHvd4cC5qx9drP3N0JsfJ4Ontuk3uPX1PUnsSxA3406bGrBrJyGRA
        tRl1Ts771O/H34RqM3KhsFcrkfRNBlSb/Cf808Ew3wEwEpZd02QExQAAAABJRU5ErkJggg==
</value>
  </data>
</root>